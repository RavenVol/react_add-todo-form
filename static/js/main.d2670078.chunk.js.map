{"version":3,"sources":["components/GetDataJson.js","components/Todo.js","components/TodoList.js","components/AddTodoForm.js","App.js","index.js"],"names":["getDataJson","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","Todo","props","react_default","createElement","className","todo","completed","onClick","id","handle","title","concat","user","name","phone","email","company","TodoList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rerender","state","todos","length","setState","toConsumableArray","sortedTodos","sortBy","reverse","handleSort","field","sortCallback","sortList","rev","b","localeCompare","sort","titleResolver","toUpperCase","String","fromCharCode","handleTodoStatusChange","handleFunction","doneCount","count","i","usersCount","map","filter","item","index","array","_this2","components_Todo","key","React","Component","AddTodoForm","setChanges","event","_event$target","target","value","correctValue","replace","prevState","defineProperty","userId","showErrors","onChange","users","type","errors","preventDefault","closing","adding","App","handleBtnClick","usersJson","todosJson","loadBtn","lastTodoId","createTodosWithUsers","todosWithUsers","objectSpread","find","handleFormClose","addingComment","handleFormAdd","_ref2","_callee2","error","_context2","_x2","Fragment","components_AddTodoForm","components_TodoList","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d2670078.chunk.js","sourcesContent":["const getDataJson = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n\n  return data;\n};\n\nexport default getDataJson;\n","import React from 'react';\n\nconst Todo = (props) => {\n  const handleTodoStatusChange = (id) => {\n    props.handle(id);\n  };\n\n  return (\n    <tr>\n      <td\n        className={props.todo.completed\n          ? 'done clickable'\n          : 'undone clickable'}\n        onClick={() => handleTodoStatusChange(props.todo.id)}>\n\n        {props.todo.completed ? 'Done' : ''}\n      </td>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}>\n\n        {props.todo.title}\n      </td>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}\n        title={`\n          ${props.todo.user.name}\n          Phone: ${props.todo.user.phone}\n          E-Mail: ${props.todo.user.email}\n          Company: ${props.todo.user.company.name}`\n        }>\n\n        {props.todo.user.name}\n      </td>\n      <td\n        className={props.todo.completed\n          ? 'done'\n          : 'undone'}>\n\n        {props.todo.user.email}\n      </td>\n    </tr>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nclass TodoList extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      todos: [...props.todos],\n      sortedTodos: [...props.todos],\n      sortBy: 'id',\n      reverse: false,\n    };\n  }\n\n  rerender = () => {\n    if (this.state.todos.length !== this.props.todos.length) {\n      this.setState({\n        todos: [...this.props.todos],\n        sortedTodos: [...this.props.todos],\n        sortBy: 'id',\n        reverse: false,\n      });\n    }\n  }\n\n  handleSort = (field) => {\n    let sortList = [];\n    let sortCallback;\n    let rev = false;\n\n    if (field === this.state.sortBy) {\n      sortList = [...this.state.sortedTodos].reverse();\n      rev = !this.state.reverse;\n    } else {\n      switch (field) {\n        case 'status':\n          sortCallback = (a, b) => a.completed - b.completed;\n          break;\n        case 'title':\n          sortCallback = (a, b) => a.title.localeCompare(b.title);\n          break;\n        case 'name':\n          sortCallback = (a, b) => a.user.name.localeCompare(b.user.name);\n          break;\n        case 'email':\n          sortCallback = (a, b) => a.user.email.localeCompare(b.user.email);\n          break;\n        default:\n          sortCallback = (a, b) => a.id - b.id;\n      }\n\n      sortList = [...this.state.todos].sort(sortCallback);\n    }\n\n    this.setState(() => (\n      {\n        sortedTodos: [...sortList],\n        sortBy: field,\n        reverse: rev,\n      }\n    ));\n  }\n\n  titleResolver = (field) => {\n    if (field === this.state.sortBy) {\n      return this.state.reverse\n        ? field.toUpperCase() + ' ' + String.fromCharCode(8657)\n        : field.toUpperCase() + ' ' + String.fromCharCode(8659);\n    }\n\n    return field.toUpperCase() + ' ' + String.fromCharCode(8661);\n  }\n\n  handleTodoStatusChange = (id) => {\n    this.props.handleFunction(id);\n  }\n\n  doneCount = () => {\n    let count = 0;\n    for (let i = 0; i < this.state.sortedTodos.length; i++) {\n      if (this.state.sortedTodos[i].completed) {\n        count++;\n      }\n    }\n    return count;\n  }\n\n  usersCount = () =>\n    this.state.sortedTodos.map(todo => todo.user.id)\n      .sort((a, b) => a - b)\n      .filter((item, index, array) => item !== array[index + 1]).length;\n\n  render() {\n    this.rerender();\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th onClick={() => this.handleSort('status')}>\n              {this.titleResolver('status')}\n            </th>\n            <th onClick={() => this.handleSort('title')}>\n              {this.titleResolver('title')}\n            </th>\n            <th onClick={() => this.handleSort('name')}>\n              {this.titleResolver('name')}\n            </th>\n            <th onClick={() => this.handleSort('email')}>\n              {this.titleResolver('email')}\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          {this.state.sortedTodos.map(todo => <Todo\n            todo={todo}\n            key={todo.id}\n            handle={this.handleTodoStatusChange}\n          /> )}\n        </tbody>\n        <tfoot>\n          <tr>\n            <td className=\"tableFoot\">\n              Total\n            </td>\n            <td className=\"tableFoot\">\n              Done : {this.doneCount()}\n              &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n              UnDone : {this.state.sortedTodos.length - this.doneCount()}\n            </td>\n            <td className=\"tableFoot\">\n              Unique Users : {this.usersCount()}\n            </td>\n            <td className=\"tableFoot\">\n            </td>\n          </tr>\n        </tfoot>\n      </table>\n    );\n  }\n}\n\nexport default TodoList;\n","import React from 'react';\n\nclass AddTodoForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      title: '',\n      userId: 0,\n      showErrors: true,\n    };\n  }\n\n  setChanges = (event) => {\n    const { value, name } = event.target;\n    let correctValue = value;\n\n    switch (name) {\n      case 'title':\n        correctValue = correctValue.replace(/[^\\wА-Яа-яЁё .,?!@$#%&*()-]/g, '');\n        break;\n      case 'userId':\n        correctValue = +correctValue;\n        break;\n      default:\n        correctValue = correctValue.replace(/[`]/g, '');\n    }\n\n    this.setState(prevState => ({\n      [name]: correctValue,\n      showErrors: false,\n    }));\n  }\n\n  render() {\n    return (\n      <form>\n        <fieldset>\n          <legend>Add ToDo</legend>\n          <label>\n            Who are You?&nbsp;\n            <select\n              name=\"userId\"\n              value={this.state.userId}\n              onChange={this.setChanges}\n            >\n              <option value=\"0\">Choose a user</option>Choose a user\n              {this.props.users.map(user => (\n                <option key={user.id} value={user.id}>{user.name}</option>\n              ))}\n          </select>\n          </label>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <label>\n            What sould be Done?&nbsp;\n            <input\n              name=\"title\"\n              type=\"text\"\n              value={this.state.title}\n              onChange={this.setChanges}\n            />\n          </label>\n\n          <br />\n\n          {this.props.errors && this.state.showErrors\n            && <p className=\"errorSign\">{this.props.errors}</p>}\n\n          <br />\n\n          <button\n            onClick={(event) => {\n              event.preventDefault();\n              this.props.closing();\n            }}\n          >\n            Close\n          </button>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          <button\n            onClick={(event) => {\n              event.preventDefault();\n              this.setState({ showErrors: true });\n              this.props.adding(this.state.userId, this.state.title);\n            }}\n          >\n            Save\n          </button>\n        </fieldset>\n      </form>\n    );\n  }\n}\n\nexport default AddTodoForm;\n","import React from 'react';\n\nimport getDataJson from './components/GetDataJson';\nimport TodoList from './components/TodoList';\nimport './App.css';\nimport AddTodoForm from './components/AddTodoForm';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      loadBtn: '!!! Load !!!',\n      users: [],\n      todos: [],\n      todosWithUsers: [],\n      lastTodoId: null,\n      addingComment: false,\n      errors: '',\n    };\n  }\n\n  handleBtnClick = async() => {\n    this.setState(() => (\n      { loadBtn: 'Loading ...' }\n    ));\n\n    const usersJson = await getDataJson('https://jsonplaceholder.typicode.com/users');\n    const todosJson = await getDataJson('https://jsonplaceholder.typicode.com/todos');\n\n    this.setState(() => (\n      {\n        users: [...usersJson],\n        todos: [...todosJson],\n        lastTodoId: [...todosJson]\n          .sort((a, b) => a.id - b.id)[todosJson.length - 1].id,\n      }\n    ));\n\n    this.createTodosWithUsers();\n\n    this.setState(() => (\n      { loadBtn: 'Done' }\n    ));\n  }\n\n  createTodosWithUsers = () => {\n    this.setState({\n      todosWithUsers: this.state.todos.map(todo => ({\n        ...todo,\n        user: this.state.users.find(user => user.id === todo.userId),\n      })),\n    });\n  }\n\n  handleTodoStatusChange = (id) => this.setState(prevState => ({\n    todosWithUsers: prevState.todosWithUsers.map((todo) => {\n    todo.completed = todo.id === id\n      ? !todo.completed\n      : todo.completed;\n\n    return todo;\n    }),\n    todos: prevState.todos.map((todo) => {\n      todo.completed = todo.id === id\n        ? !todo.completed\n        : todo.completed;\n\n      return todo;\n    }),\n  }))\n\n\n  handleFormClose = () => {\n    this.setState({ addingComment: false });\n  }\n\n  handleFormAdd = async(userId, title) => {\n    let error = '';\n\n    error += userId === 0 ? 'Choose a user.' : '';\n    error += title === '' ? ' Fill out a ToDo field.' : '';\n\n    if (error !== '') {\n      this.setState({ errors: error });\n    } else {\n      await this.setState(prevState => ({\n        todos: [\n          ...prevState.todos,\n          {\n            userId,\n            id: prevState.lastTodoId + 1,\n            title,\n            completed: false,\n          },\n        ],\n        lastTodoId: prevState.lastTodoId + 1,\n        addingComment: false,\n        errors: '',\n      }));\n\n      this.createTodosWithUsers();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>\n          Dynamic list of&nbsp;\n          {this.state.todos[0]\n            ? this.state.todos.length\n            : null}\n          &nbsp;todos&nbsp;\n          {this.state.loadBtn === '!!! Load !!!'\n            ? null\n            : `- ${this.state.loadBtn}`}\n        </h1>\n\n        { this.state.loadBtn === 'Done'\n          ? (<>\n              <button className=\"addTodoBtn\"\n                onClick={() => this.setState(prevState => ({\n                  addingComment: !prevState.addingComment\n                }))}>\n                Add ToDo\n              </button>\n\n              {this.state.addingComment\n                && (<AddTodoForm\n                  closing={this.handleFormClose}\n                  users={this.state.users}\n                  adding={this.handleFormAdd}\n                  errors={this.state.errors}\n                />)}\n\n              <TodoList\n                todos={this.state.todosWithUsers}\n                handleFunction={this.handleTodoStatusChange}\n              />\n            </>)\n          : (\n              <button onClick={this.handleBtnClick}>\n                {this.state.loadBtn}\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}